{"version":3,"sources":["./src/app/directives/copyme.directive.ts","./src/app/services/orderService/orders.service.ts","./src/environments/environment.ts","./src/app/pipes/filter.pipe.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/admin.guard.ts","./src/app/directives/hover.directive.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/logout/logout.component.ts","./src/app/components/logout/logout.component.html","./src/app/services/restaurantService/restaurant.service.ts","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/restaurants/restaurants.component.ts","./src/app/components/restaurants/restaurants.component.html","./src/app/services/index.ts","./src/app/components/order-details/order-details.component.ts","./src/app/components/order-details/order-details.component.html","./src/app/components/restaurants/rest.localStorage.ts","./src/app/app-routing.module.ts","./src/app/components/orders/orders.component.ts","./src/app/components/orders/orders.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appCopyme]'\n})\nexport class CopymeDirective {\n\n  constructor(public element: ElementRef) { }\n\n  @HostListener('click')\n  onClick() {\n    var text = this.element.nativeElement.innerText\n    navigator.clipboard.writeText(text).then(function () {\n    }, function (err) {\n    });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { BaseURL } from '..';\n\nconst ORDERS_PATH = \"/orders\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getOrders(from?: number, limit?: number) {\n    const queryParams = from >= 0 && limit ? `?from=${from}&limit=${limit}` : \"\";\n    return this.httpClient.get(`${BaseURL}${ORDERS_PATH}${queryParams}`).toPromise()\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(items: Array<any>, ...args: any[]): any {\n    const [filterString, key] = args;\n    if (!filterString) return items\n    const filteredOrders = items.filter(item => item[key].toString().includes(filterString))\n    return filteredOrders;\n  }\n\n}\n\n// class Person {\n//   sayHi(a) { return a + 1 }\n// }\n\n// const p = new Person();\n// p.sayHi(1);\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>home works!</h1>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>PAGE NOT FOUND</p>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'resto-client';\n}\n","<div>\n  <app-nav-bar></app-nav-bar>\n  <router-outlet></router-outlet>\n  <span> result 11</span>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(public router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    console.log(\"Guard is defending on this Route\")\n    if (localStorage.getItem(\"token\")) return true;\n    return false;\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n\n@Directive({\n  selector: '[hoverMe]'\n})\nexport class HoverDirective {\n  @Input() color;\n\n  public el: any;\n\n  constructor(public element: ElementRef, private renderer: Renderer2) {\n    this.el = element;\n  }\n\n  @HostListener('mouseover')\n  onMouseOver() {\n    this.renderer.setStyle(this.el.nativeElement, 'background-color', this.color);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.renderer.setStyle(this.el.nativeElement, 'background-color', \"white\");\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    localStorage.setItem(\"token\", \"1234\")\n  }\n\n}\n","<h1>Token Created!</h1>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\n\nimport { MatIconModule } from \"@angular/material/icon\"\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\"\nimport { MatFormFieldModule } from \"@angular/material/form-field\"\nimport { MatSelectModule } from \"@angular/material/select\"\n\nimport { MatButtonModule } from \"@angular/material/button\"\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { OrderDetailsComponent } from './components/order-details/order-details.component'\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RestaurantsComponent } from './components/restaurants/restaurants.component';\nimport { FormsModule } from \"@angular/forms\"\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { HoverDirective } from './directives/hover.directive';\nimport { CopymeDirective } from './directives/copyme.directive';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    NotFoundComponent,\n    NavBarComponent,\n    OrdersComponent,\n    OrderDetailsComponent,\n    RestaurantsComponent,\n    FilterPipe,\n    LogoutComponent,\n    HoverDirective,\n    CopymeDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatTableModule,\n    HttpClientModule,\n    MatButtonModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    localStorage.removeItem(\"token\")\n\n  }\n\n}\n","<h1>Token removed!</h1>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseURL } from '..';\n\n\n\nconst restaurants_PATH = \"/restaurants\"\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getRestaurants(): Promise<Array<any>> {\n    return (this.httpClient.get(`${BaseURL}${restaurants_PATH}`).toPromise() as Promise<Array<any>>)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n    </button>\n    <span>Resto</span>\n    <div style=\"margin-left: 10px;color:white\" class=\"links-color\">\n        <a routerLink=\"/register\"> Register </a>\n        <a routerLink=\"/login\"> Login </a>\n        <a routerLink=\"/home\"> Home </a>\n        <a routerLink=\"/orders\"> Orders </a>\n        <a routerLink=\"/restaurants\"> restaurants </a>\n        <a routerLink=\"/logout\"> Logout </a>\n\n\n    </div>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n        <mat-icon>share</mat-icon>\n    </button>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { RestaurantService } from 'src/app/services/restaurantService/restaurant.service';\nimport { getRestaurantsLS, setRestaurantsLS } from \"./rest.localStorage\"\n\n@Component({\n  selector: 'app-restaurants',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.css']\n})\nexport class RestaurantsComponent implements OnInit {\n  public displayedColumns: Array<string>;\n  public restaurants: Array<any>;\n  public isLoading: boolean;\n  constructor(private restaurantsService: RestaurantService) {\n    this.restaurants = getRestaurantsLS() || null;\n    this.isLoading = true;\n    this.displayedColumns = [\"restaurantName\", \"country\", \"flag\"]\n  }\n\n  async ngOnInit(): Promise<any> {\n    this.restaurants = await this.restaurantsService.getRestaurants()\n    setRestaurantsLS(this.restaurants);\n    this.isLoading = false\n  }\n\n}\n","<div style=\"width: 1000px;margin:auto auto\">\n    <h1>\n        Resto Main Page\n    </h1>\n\n\n    <div *ngIf=\"isLoading\" style=\"width: 20px; margin:auto auto;\">\n        <mat-spinner></mat-spinner>\n    </div>\n    <h2 *ngIf=\"restaurants?.length === 0\"> No Data </h2>\n    <table *ngIf=\"restaurants?.length > 0\" style=\"width: 100%;\" mat-table [dataSource]=\"restaurants\"\n        class=\"mat-elevation-z8\">\n\n\n        <ng-container matColumnDef=\"restaurantName\">\n            <th mat-header-cell *matHeaderCellDef> restaurant Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"country\">\n            <th mat-head er-cell *matHeaderCellDef> country </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.country}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"flag\">\n            <th mat-header-cell *matHeaderCellDef> Flag </th>\n            <td mat-cell *matCellDef=\"let element\"> <img height=\"100\" width=\"100\" [src]=element.flag /> </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>","export const BaseURL = \"http://localhost:5000\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\"\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit, OnDestroy {\n  public subscriber: any;\n  public orderNumber: number\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.subscriber = this.route.params.subscribe(params => {\n      this.orderNumber = params[\"orderNumber\"]\n      console.log(this.orderNumber)\n    })\n  }\n\n  goToOrder() {\n    this.router.navigate([`/order-details/${123451}`])\n  }\n\n  ngOnDestroy() {\n    console.log(\"UnSubscribe\")\n    this.subscriber.unsubscribe()\n  }\n\n}\n","<h1>\n    <span (click)=\"goToOrder()\"> Next Order >> </span> The Order number is: {{orderNumber}}\n</h1>","const _localStorageKey = \"data.restaurants\"\nexport const getRestaurantsLS = () => {\n    const restString = window.localStorage.getItem(_localStorageKey);\n    let restArray = [];\n    try {\n        restArray = JSON.parse(restString);\n    } catch (ex) {\n        console.log(ex)\n    }\n    return restArray;\n}\n\nexport const setRestaurantsLS = (rest: Array<any>) => {\n    window.localStorage.setItem(_localStorageKey, JSON.stringify(rest))\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { OrderDetailsComponent } from './components/order-details/order-details.component';\nimport { OrdersComponent } from './components/orders/orders.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { RestaurantsComponent } from './components/restaurants/restaurants.component';\nimport { AdminGuard } from './guards/admin.guard';\n\n\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"home\", component: HomeComponent, canActivate: [AdminGuard] },\n  { path: \"orders\", component: OrdersComponent, canActivate: [AdminGuard] },\n  { path: \"order-details/:orderNumber\", component: OrderDetailsComponent, canActivate: [AdminGuard] },\n  { path: \"restaurants\", component: RestaurantsComponent, canActivate: [AdminGuard] },\n  { path: \"logout\", component: LogoutComponent },\n  { path: \"**\", component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\"\nimport { FilterPipe } from 'src/app/pipes/filter.pipe';\n\n\nimport { OrdersService } from \"../../services/orderService/orders.service\"\nconst CLIENT_DATA_LIMIT = 3\ninterface IOrder {\n  orderNumber: number,\n  orderOwner: string,\n  fromHour: string,\n  toHour: string,\n  day: string,\n}\n\nconst listOfColumns = [{ label: \"Order number\", value: \"orderNumber\" },\n{ label: \"From Hour\", value: \"fromHour\" },\n{ label: \"To Hour\", value: \"toHour\" },\n{ label: \"Owner\", value: \"orderOwner\" },\n{ label: \"Number of reservations\", value: \"reservations\" },\n{ label: \"Reservation Day\", value: \"day\" },\n{ label: \"Outside\", value: \"isOutside\" }]\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  public orders: any;\n  public filteredOrders: any\n  public displayedColumns: Array<string>;\n  public filterModel: string\n  public listOfCoulmnsModel: Array<any>;\n  public selectedValue: string;\n  public from: number;\n  public limit: number;\n  constructor(private router: Router, private ordersService: OrdersService) {\n    this.listOfCoulmnsModel = listOfColumns;\n    this.displayedColumns = [...listOfColumns.map(item => item.value), \"actions\"]\n    this.filterModel = \"\"\n    this.selectedValue = listOfColumns[0].value\n    this.limit = CLIENT_DATA_LIMIT;\n    this.from = 0;\n  }\n  ngOnInit(): void {\n    this.getOrders()\n  }\n  deleteOrder(a) {\n\n\n    // call service ; pass order number ; service will send to the server deletion operation \n  }\n  async getOrders() {\n    this.orders = await this.ordersService.getOrders(this.from, this.limit);\n    this.filteredOrders = this.orders;\n  }\n  goToOrder(orderNumber: number) {\n    this.router.navigate([`/order-details/${orderNumber}`])\n  }\n  async prev() {\n    if (this.from - this.limit < 0) return;\n    this.from = this.from - this.limit\n    this.getOrders()\n  }\n  async next() {\n    if (this.orders.length < this.limit) return;\n    this.from = this.from + this.limit\n    this.getOrders()\n  }\n\n  filterOperation(inputValue: string) {\n    const newPipe = new FilterPipe()\n    this.filteredOrders = newPipe.transform(this.orders, inputValue, this.selectedValue)\n  }\n}\n","<div style=\"width: 1000px;margin:auto auto\">\n    <h1>\n        Orders Page\n\n    </h1>\n    <input [(ngModel)]=\"filterModel\" (keyup)=\"filterOperation($event.target.value)\" />\n    <button (click)=\"getOrders()\" mat-button>Refresh</button>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Search By</mat-label>\n        <mat-select [(value)]=\"selectedValue\" (selectionChange)=\"filterOperation(filterModel)\">\n            <mat-option *ngFor=\"let column of listOfCoulmnsModel\" [value]=\"column.value\"> {{column.label}} </mat-option>\n\n        </mat-select>\n    </mat-form-field>\n\n    <!-- <div>\n        <div *ngFor=\"let o of orders | filter : filterModel:'orderNumber'\">{{o.orderOwner}} </div>\n    </div> -->\n\n\n\n    <table style=\"width: 100%;\" mat-table [dataSource]=\"filteredOrders\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"orderNumber\">\n            <th mat-header-cell *matHeaderCellDef> Order No </th>\n            <td style=\"cursor: pointer;\" mat-cell *matCellDef=\"let element\"\n                routerLink=\"/order-details/{{element.orderNumber}}\">\n                {{element.orderNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"orderOwner\">\n            <th mat-header-cell *matHeaderCellDef> Order Owner </th>\n            <td [appCopyme] [hoverMe] color=\"red\" mat-cell *matCellDef=\"let element\"> {{element.orderOwner}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fromHour\">\n            <th mat-header-cell *matHeaderCellDef> From </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.fromHour}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"toHour\">\n            <th mat-header-cell *matHeaderCellDef> To </th>\n            <td [hoverMe] color=\"yellow\" mat-cell *matCellDef=\"let element\"> {{element.toHour}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"reservations\">\n            <th mat-header-cell *matHeaderCellDef> Reservations </th>\n            <td [hoverMe] color=\"green\" mat-cell *matCellDef=\"let element\"> {{element.reservations}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"day\">\n            <th mat-header-cell *matHeaderCellDef> Day </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.day}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"isOutside\">\n            <th mat-header-cell *matHeaderCellDef> Outside </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.isOutside}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\"> <button (click)=\"deleteOrder(element.orderNumber)\"\n                    mat-button>X</button> </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div>\n        <button (click)=\"prev()\" mat-button>Prev</button>\n        <button (click)=\"next()\" style=\"float: right;\" mat-button>Next</button>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}